// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApplication.Repository;

#nullable disable

namespace TravelApplication.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212191348_MigrateData1")]
    partial class MigrateData1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelApplication.Domain.Domain.Accommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationHours")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Destination", b =>
                {
                    b.Property<Guid>("TravelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TravelId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.DestinationActivity", b =>
                {
                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DestinationId", "ActivityId");

                    b.HasIndex("ActivityId");

                    b.ToTable("DestinationActivities");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.DestinationTransport", b =>
                {
                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TransportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DestinationId", "TransportId");

                    b.HasIndex("TransportId");

                    b.ToTable("DestinationTransports");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Transport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArrivalPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CostPerPassenger")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeparturePoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Accommodation", b =>
                {
                    b.HasOne("TravelApplication.Domain.Domain.Destination", "Destination")
                        .WithMany("Accommodations")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.DestinationActivity", b =>
                {
                    b.HasOne("TravelApplication.Domain.Domain.Activity", "Activity")
                        .WithMany("DestinationActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelApplication.Domain.Domain.Destination", "Destination")
                        .WithMany("DestinationActivities")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.DestinationTransport", b =>
                {
                    b.HasOne("TravelApplication.Domain.Domain.Destination", "Destination")
                        .WithMany("DestinationTransports")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelApplication.Domain.Domain.Transport", "Transport")
                        .WithMany("DestinationTransports")
                        .HasForeignKey("TransportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Activity", b =>
                {
                    b.Navigation("DestinationActivities");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Destination", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("DestinationActivities");

                    b.Navigation("DestinationTransports");
                });

            modelBuilder.Entity("TravelApplication.Domain.Domain.Transport", b =>
                {
                    b.Navigation("DestinationTransports");
                });
#pragma warning restore 612, 618
        }
    }
}
